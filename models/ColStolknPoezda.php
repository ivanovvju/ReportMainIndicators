<?php

/**
 * Показатель "Количество столкновений железнодорожного подвижного состава (при поездной работе) по вине ЦД".
 */
class ColStolknPoezda extends BaseIndicator
{
    /**
     * @var UtilsDate Объект для работы с датами.
     */
    private $utilsDate;

    /**
     * @var string Xml-строка из СИС-Эффекта.
     */
    private $sisContents;

    /**
     * @var int Значение плана из файла СИС-Эффект.
     */
    private $planSis;

    /**
     * @var int Значение факт из файла СИС-Эффект.
     */
    private $factSis;

    /**
     * @var int Значение факта прошлого года из СИС-Эффект.
     */
    private $factLastYearSis;

    public function __construct($codeIndicator, UtilsDate $utilsDate)
    {
        Log::Info("Формирование показателя: Количество столкновений железнодорожного подвижного состава (при поездной работе) по вине ЦД");

        parent::__construct($codeIndicator);

        $this->utilsDate = $utilsDate;

        $this->downloadFileSis();
        $this->searchDataFromFileSis();

        $this->iniFactLastYear();
        $this->iniPlan();
        $this->iniFact();
        $this->iniToPlanPercent();
        $this->iniToPlan();
        $this->iniToLastYearPercent();
        $this->iniToLastYear();
        $this->iniBenchmark();
    }

    /**
     * Скачивание файла из СИС-Эффект.
     * @return void
     */
    private function downloadFileSis()
    {
        if ($curl = curl_init()) {
            curl_setopt($curl, CURLOPT_URL, "http://effect.gvc.oao.rzd/effect/table/ARB_H307.xml?DAT={$this->utilsDate->year}.{$this->utilsDate->month}.{$this->utilsDate->day}");
            curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
            curl_setopt($curl, CURLOPT_COOKIE, "login=smenareq;password=smenareq");
            $out = curl_exec($curl);
            file_put_contents("tmp/ARB_H307_{$this->utilsDate->year}.xml", $out);
            $this->sisContents = $out;
            curl_close($curl);
            Log::Info("Скачали файл из СИС-Эффект: tmp/ARB_H307_{$this->utilsDate->year}.xml");
        }
    }

    /**
     * Обработаем файл из СИС-Эффект в этом методе, чтобы не запускать цикл несколько раз для поиска нужного показателя.
     */
    private function searchDataFromFileSis()
    {
        $dataFile = file_get_contents("tmp/ARB_H307_{$this->utilsDate->year}.xml");
        libxml_use_internal_errors(true);
        $sx = new SimpleXMLElement($dataFile);

        $data = (array)$sx->xpath("//ss:Row");
        $rows = count($data);
        $plan = 0;
        $fact = 0;
        $factLastYear = 0;

        for ($row = 1; $row <= $rows; $row++) {
            $data = (array)$sx->xpath("//ss:Row[$row]/ss:Cell[1]/ss:Data");
            $str = $data[0][0];
            $nameRow = iconv("UTF-8", "windows-1251", $str);

            /*
             * В качестве плана Саярова сказала использовать строку ЦД.
             */
            if ($nameRow == "ЦД") {
                $data = (array)$sx->xpath("//ss:Row[$row]/ss:Cell[4]/ss:Data");
                $plan = isset($data[0][0]) ? round($data[0][0]) : 0;
            } elseif ($nameRow == "КБШ") {
                $data = (array)$sx->xpath("//ss:Row[$row]/ss:Cell[4]/ss:Data");
                $fact = isset($data[0][0]) ? round($data[0][0]) : 0;

                $data = (array)$sx->xpath("//ss:Row[$row]/ss:Cell[3]/ss:Data");
                $factLastYear = isset($data[0][0]) ? round($data[0][0]) : 0;
            }
        }

        $this->planSis = $plan;
        $this->factSis = $fact;
        $this->factLastYearSis = $factLastYear;
    }

    /**
     * @inheritDoc
     */
    public function iniFactLastYear()
    {
        // TODO: Implement iniFactLastYear() method.
        Log::Info("Факт пр года: {$this->factLastYearSis}");
        $this->setFactLastYear($this->factLastYearSis);
    }

    /**
     * @inheritDoc
     */
    public function iniPlan()
    {
        // TODO: Implement iniPlan() method.
//        $this->setPlan($this->planSis);
        Log::Info("План:-");
        $this->setPlan("-");
    }

    /**
     * @inheritDoc
     */
    public function iniFact()
    {
        // TODO: Implement iniFact() method.
        Log::Info("Факт: {$this->factSis}");
        $this->setFact($this->factSis);
    }

    /**
     * @inheritDoc
     */
    public function iniBenchmark()
    {
        // TODO: Implement iniBenchmark() method.
//        $this->setBenchmark($this->getFactLastYear());
        $this->setBenchmark("пр.год");
    }

    /**
     * @inheritDoc
     */
    public function iniToPlanPercent()
    {
        // TODO: Change the autogenerated stub
        $this->setToPlanPercent("-");
    }

    /**
     * @inheritDoc
     */
    public function iniToPlan()
    {
        // TODO: Change the autogenerated stub
        $this->setToPlan("-");
    }

    /**
     * @inheritDoc
     */
    public function iniToLastYearPercent()
    {
        // TODO: Change the autogenerated stub
        $this->setToLastYearPercent("-");
    }
}